DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS locations CASCADE;
DROP TABLE IF EXISTS events CASCADE;
DROP TABLE IF EXISTS requests CASCADE;
DROP TABLE IF EXISTS compilations CASCADE;
DROP TABLE IF EXISTS compilations_events CASCADE;
DROP TABLE IF EXISTS comments CASCADE;

CREATE TABLE IF NOT EXISTS users
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name  VARCHAR NOT NULL,
    email VARCHAR NOT NULL,
    CONSTRAINT uq_email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS categories
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR NOT NULL,
    CONSTRAINT uq_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS locations
(
    id  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lat REAL NOT NULL,
    lon REAL NOT NULL
);

CREATE TABLE IF NOT EXISTS events
(
    event_id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_title        VARCHAR                     NOT NULL,
    description        VARCHAR                     NOT NULL,
    annotation         VARCHAR                     NOT NULL,
    create_date        TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    event_date         TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    paid               BOOLEAN                     NOT NULL,
    participant_limit  INTEGER                     NOT NULL,
    published_date     TIMESTAMP WITHOUT TIME ZONE,
    request_moderation BOOLEAN                     NOT NULL,
    state              VARCHAR                     NOT NULL,
    initiator_id       BIGINT                      NOT NULL,
    category_id        BIGINT                      NOT NULL,
    location_id        BIGINT                      NOT NULL,
    CONSTRAINT fk_event_category_id FOREIGN KEY (category_id) REFERENCES CATEGORIES (id),
    CONSTRAINT fk_event_location_id FOREIGN KEY (location_id) REFERENCES LOCATIONS (id),
    CONSTRAINT fk_event_initiator_id FOREIGN KEY (initiator_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS requests
(
    request_id     BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    requester_id   BIGINT                      NOT NULL,
    event_id       BIGINT                      NOT NULL,
    request_status VARCHAR                     NOT NULL,
    created        TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT fk_requester FOREIGN KEY (requester_id) REFERENCES users (id),
    CONSTRAINT fk_event FOREIGN KEY (event_id) REFERENCES events (event_id),
    CONSTRAINT unique_category UNIQUE (requester_id, event_id)
);

CREATE TABLE IF NOT EXISTS compilations
(
    compilation_id        BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    compilation_title     VARCHAR NOT NULL,
    compilation_is_pinned BOOLEAN NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations_events
(
    compilation_id BIGINT,
    event_id       BIGINT,
    CONSTRAINT fk_compilation_id FOREIGN KEY (compilation_id) REFERENCES compilations (compilation_id),
    CONSTRAINT fk_event_id FOREIGN KEY (event_id) REFERENCES events (event_id),
    PRIMARY KEY (compilation_id, event_id)
);

CREATE TABLE IF NOT EXISTS comments
(
    comment_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    author_id BIGINT NOT NULL,
    event_id BIGINT NOT NULL,
    comment_text VARCHAR NOT NULL,
    create_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT fk_comment_user_id FOREIGN KEY (author_id) REFERENCES users (id),
    CONSTRAINT fk_comment_event_id FOREIGN KEY (event_id) REFERENCES events (event_id)
);